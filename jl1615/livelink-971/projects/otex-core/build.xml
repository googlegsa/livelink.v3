<?xml version="1.0" encoding="UTF-8"?>

<project name="otex-core" default="build" basedir=".">

  <!-- ========================= PROPERTIES ============================= -->
  <property file="../version.properties"/>
  <property file="${user.home}/google-enterprise-connector-otex.properties"/>

  <propertyset id="javatest.properties">
    <propertyref prefix="javatest."/>
    <mapper type="glob" from="javatest.*" to="*"/>
  </propertyset>

  <property name="COMPILE_DEBUG_FLAG" value="true" />
  <property name="COMPILE_DEBUG_LEVEL" value="source,lines,vars" />
  <property name="COMPILE_TARGET" value="1.4" />
  <property name="COMPILE_BOOTCLASSPATH" value="${build.bootclasspath}" />

  <!-- Define Directories. -->
  <property name="build" value="build" />
  <property name="dist" value="dist" />
  <property name="src" value="source/java" />
  <property name="classes" value="${build}/classes" />
  <property name="config" value="config" />
  <property name="config.build" value="${build}/config" />

  <property name="tests.src" value="source/javatests" />
  <property name="tests.build" value="build/tests" />
  <property name="tests.classes" value="${tests.build}/classes" />
  <property name="tests.todir" value="tests_outdir" />
  <property name="tests.logging.properties" 
            location="${tests.classes}/tests.logging.properties"/>

  <property name="jar.dir"  value="${dist}/jar" />
  <property name="jarfile"  value="${jar.dir}/connector-otex.jar" />

  <property name="connector-manager-projects.dir"
            location="${build.connector.manager.home}/projects" />
  <property name="connector-manager.dir"
            location="${connector-manager-projects.dir}/connector-manager" />
  <property name="thirdparty.jar.dir"
            location="${connector-manager-projects.dir}/connector-manager/third-party" />
  <property name="spi.jar.dir" value="${connector-manager.dir}/dist/jarfile" />
  <property name="spi.jarfile" value="${spi.jar.dir}/connector-spi.jar" />
  <property name="connector.jarfile" value="${spi.jar.dir}/connector.jar" />
  <property name="tests.jarfile" value="${spi.jar.dir}/connector-tests.jar" />

  <!-- =========================== TASKS =============================== -->
  <target name="build" depends="init,compile,compile_tests,jar">
  </target>

  <target name="init">
    <mkdir dir="${build}" />
    <mkdir dir="${dist}" />
    <mkdir dir="${classes}" />
    <mkdir dir="${config.build}" />
    <mkdir dir="${tests.build}" />
    <mkdir dir="${tests.classes}" />
    <mkdir dir="${tests.todir}" />
    <mkdir dir="${jar.dir}" />
  </target>

  <target name="compile" depends="init">
    <!-- compile java source files -->
    <javac srcdir="${src}" destdir="${classes}" 
           debug="${COMPILE_DEBUG_FLAG}" 
           debuglevel="${COMPILE_DEBUG_LEVEL}"
           target="${COMPILE_TARGET}" source="${COMPILE_TARGET}">
      <bootclasspath path="${COMPILE_BOOTCLASSPATH}"/>
      <classpath>
        <pathelement location="${spi.jarfile}" />
        <fileset dir="${thirdparty.jar.dir}">
          <include name="**/*.jar" />
        </fileset>
      </classpath>
    </javac>
  </target>

  <target name="compile_tests" depends="init">
    <!-- compile java source files for tests -->
    <javac srcdir="${tests.src}" destdir="${tests.classes}" 
           debug="${COMPILE_DEBUG_FLAG}" 
           debuglevel="${COMPILE_DEBUG_LEVEL}"
           target="${COMPILE_TARGET}" source="${COMPILE_TARGET}">
      <bootclasspath path="${COMPILE_BOOTCLASSPATH}"/>
      <classpath>
        <fileset dir="${thirdparty.jar.dir}">
          <include name="**/junit.jar" />
          <include name="**/spring.jar" />
        </fileset>
        <pathelement location="${spi.jar.dir}/connector.jar" />
        <pathelement location="${spi.jar.dir}/connector-tests.jar" />
        <pathelement location="${spi.jarfile}" />
        <pathelement location="${classes}" />
      </classpath>
    </javac>
    <copy todir="${tests.classes}"
          overwrite="yes">
      <fileset dir="${tests.src}">
          <include name="**/OtexConnectorResources_test.properties" />
      </fileset>
    </copy>
  </target>

  <target name="run_tests" depends="compile_tests,jar">
    <property name="test.suite" value="*"/>
    <property name="logging.file" 
              location="${tests.todir}/test.log" />
    <copy file="source/javatests/tests.logging.properties"
          tofile="${tests.logging.properties}"
          overwrite="yes">
      <filterset>
        <filter token="logging.file"
                value="${logging.file}"/>
      </filterset>
    </copy>
    <replace file="${tests.logging.properties}" 
             token="\" value="\\" />
    <junit>
      <assertions><enable/></assertions>
      <classpath>
        <fileset dir="${thirdparty.jar.dir}">
          <include name="**/*.jar" />
        </fileset>
        <pathelement location="${spi.jar.dir}/connector.jar" />
        <pathelement location="${spi.jar.dir}/connector-tests.jar" />
        <pathelement location="${jarfile}" />
        <pathelement location="${spi.jarfile}" />
        <pathelement location="${tests.classes}" />
      </classpath>
      <formatter type="brief" usefile="no"/>
      <formatter type="plain" />
      <syspropertyset refid="javatest.properties"/>
      <sysproperty key="java.util.logging.config.file"
                   value="${tests.logging.properties}"/>
      <batchtest fork="yes" todir="${tests.todir}">
        <fileset dir="${tests.src}">
          <include name="**/${test.suite}Test.java" />
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="jar" description="livelink-connector" 
          depends="compile,compile_tests">
    <copy todir="${config.build}">
      <fileset dir="${config}" />
      <filterset>
        <filter token="constructor-arg" 
                value="&lt;constructor-arg value=&quot;com.google.enterprise.connector.otex.client.mock.MockClientFactory&quot; /&gt;" />
      </filterset>
      <!-- FIXME: Workaround for GSA country code issue. -->
      <filtermapper>
        <replacestring from="_pt_BR" to="_pt"/>
        <replacestring from="_zh_CN" to="_zh"/>
      </filtermapper>
    </copy>

    <tstamp />
    <jar jarfile="${jarfile}">
      <fileset dir="${classes}"/>
      <fileset dir="${src}" includes="**/*.properties"/>
      <fileset dir="${tests.classes}" includes="**/mock/*" />
      <fileset dir="${build}" includes="config/*.*" 
        excludes="**/logging.properties" />
      <manifest>
        <attribute name="Implementation-Title" value="Mock Livelink Connector"/>
        <attribute name="Implementation-Version" value="${version} ${TODAY}"/>
        <attribute name="Implementation-Vendor" value="Google Inc."/>
        <attribute name="Specification-Title" value="Connector Manager SPI"/>
        <attribute name="Specification-Version" value="${version.spi}"/>
        <attribute name="Specification-Vendor" value="Google Inc."/>
      </manifest>
    </jar>
  </target>

  <target name="clean" description="Deletes all build files.">
    <delete dir="${build}" />
    <delete dir="${dist}" />
  </target>

</project>
