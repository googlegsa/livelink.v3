###############LOGGING LEVELS###################
#The levels in descending order are: 
#SEVERE (highest value) 
#WARNING 
#INFO 
#CONFIG 
#FINE 
#FINER 
#FINEST (lowest value) 
#In addition there is a level OFF that can be used to turn off logging, 
#and a level ALL that can be used to enable logging of all messages. 

############################################################
#  	Global properties
############################################################
# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.

#.level=ALL
.level=INFO

############################################################
# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.

handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler
############################################################

############################################################
#    Handler specific properties.
############################################################

###############LOGGING PATTERNS###################
# "/" the local pathname separator 
# "%t" the system temporary directory 
# "%h" the value of the "user.home" system property 
# "%g" the generation number to distinguish rotated logs 
# "%u" a unique number to resolve conflicts 
# "%%" translates to a single percent sign "%
#-----------------------------------------------------------------------------------------------------------
#Refer: http://java.sun.com/j2se/1.4.2/docs/api/java/util/logging/FileHandler.html
#-----------------------------------------------------------------------------------------------------------

###############PROPERTIES FOR FILE HANDLER###################
###java.util.logging.FileHandler.level specifies the default level for the Handler (defaults to Level.ALL).
java.util.logging.FileHandler.level=INFO

###java.util.logging.FileHandler.pattern specifies a pattern for generating the output file name. 
###See below for details. (Defaults to "%h/java%u.log").
java.util.logging.FileHandler.pattern = ${catalina.base}/logs/google-connectors.otex%g.log

###java.util.logging.FileHandler.limit specifies an approximate maximum amount to write (in bytes) to any one file. 
###If this is zero, then there is no limit. (Defaults to no limit). 
### log file size (in bytes) 52428800 ~ 50 MB
java.util.logging.FileHandler.limit = 52428800 

###java.util.logging.FileHandler.count specifies how many output files to cycle through (defaults to 1). 
java.util.logging.FileHandler.count = 10 

###java.util.logging.FileHandler.encoding the name of the character set encoding to use (defaults to the default platform encoding). 
java.util.logging.FileHandler.encoding=UTF-8

###java.util.logging.FileHandler.formatter specifies the name of a Formatter class to use (defaults to java.util.logging.XMLFormatter) 
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
############################################################

###############PROPERTIES FOR CONSOLE HANDLER###################
# Limit the message that are printed on the console to INFO and above.
java.util.logging.ConsoleHandler.level = INFO
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter
##################################################################

############################################################
#    Package Specific patterns.
############################################################

## To generate more detailed logging in general, edit the global
## .level property above. To generate more specific logging, uncomment
## and edit one of the following lines. In either case, if you choose
## a logging value lower than INFO, you also need to edit the
## java.util.logging.FileHandler.level property above to match the
## lowest level output that you want.

## Use the following line to configure logging for the Connector Manager 
## and the Livelink connector together.
#com.google.enterprise.connector.level = INFO

## Use the following line to configure logging for the Livelink
## connector separately.
#com.google.enterprise.connector.otex.level = INFO

## Use the following line to configure logging for the Spring
## Framework. This is used to load the connector instance
## configuration from the connectorInstance.xml file, and might be
## especially useful if you have customized that file.
#org.springframework.level = INFO
